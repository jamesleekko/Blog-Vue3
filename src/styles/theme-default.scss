@use "sass:math";

$base-color: #ff9900;

$--colors: (
  "primary": (
    "base": green,
  ),
  "success": (
    "base": #21ba45,
  ),
  "warning": (
    "base": #f2711c,
  ),
  "danger": (
    "base": #db2828,
  ),
  "error": (
    "base": #db2828,
  ),
  "info": (
    "base": #42b8dd,
  ),
);

$my-purple: #8800ff;

@forward "element-plus/theme-chalk/src/common/var.scss" with (
  $colors: (
    "primary": (
      "base": $base-color,
    ),
  ),
  $header: (
    "padding": 0,
  )
);

@mixin iconInBar() {
  .el-switch__inner {
    transform: translateX(calc(-50% + 2px));
    z-index: 1;

    .el-icon {
      color: #606266;
    }
  }

  &.is-checked {
    .el-switch__inner {
      transform: translateX(calc(50% - 2px));

      .el-icon {
        color: #606266;
      }
    }
  }
}

@mixin common-transition() {
  transition-duration: 0.2s;
}

@mixin bottom-line() {
  @include common-transition();
  width: 0;
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  height: 3px;
  background-color: $my-purple;
}

.glitch {
  position: relative;
  mix-blend-mode: lighten;
  overflow: hidden;
  white-space: nowrap;

  &:hover {
    &::before {
      animation: glitch-loop-1 0.8s infinite ease-in-out alternate-reverse;
    }

    &::after {
      animation: glitch-loop-2 0.8s infinite ease-in-out alternate-reverse;
    }
  }

  &::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    width: 100%;
    background: rgba(0, 0, 0, 0);
    clip: rect(0, 0, 0, 0);
    left: -1px;
    text-shadow: 4px 0 #ff3f1a;
  }

  &::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    width: 100%;
    background: rgba(0, 0, 0, 0);
    clip: rect(0, 0, 0, 0);
    left: 1px;
    text-shadow: -5px 0 #00a7e0;
  }
}

@keyframes glitch-loop-1 {
  0% {
    clip: rect(36px, 9999px, 9px, 0);
  }

  25% {
    clip: rect(25px, 9999px, 99px, 0);
  }

  50% {
    clip: rect(50px, 9999px, 102px, 0);
  }

  75% {
    clip: rect(30px, 9999px, 92px, 0);
  }

  100% {
    clip: rect(91px, 9999px, 98px, 0);
  }
}

@keyframes glitch-loop-2 {
  0% {
    top: -1px;
    left: 1px;
    clip: rect(65px, 9999px, 119px, 0);
  }

  25% {
    top: -6px;
    left: 4px;
    clip: rect(79px, 9999px, 19px, 0);
  }

  50% {
    top: -3px;
    left: 2px;
    clip: rect(68px, 9999px, 11px, 0);
  }

  75% {
    top: 0;
    left: -4px;
    clip: rect(95px, 9999px, 53px, 0);
  }

  100% {
    top: -1px;
    left: -1px;
    clip: rect(31px, 9999px, 149px, 0);
  }
}

.el-header {
  position: fixed;
  z-index: 2;
}

.header-con {
  position: fixed;
  width: 100%;
  display: flex;
  justify-content: space-between;
  background: transparent;
  color: #fff;
  @include common-transition();

  &.onTop {
    background: rgba(255, 255, 255, 0.95);
    box-shadow: 0 1px 40px -8px rgb(0 0 0 / 50%);
    color: #333;
  }

  &.stable {
    background: rgba(255, 255, 255, 0.95);
    box-shadow: 0 1px 40px -8px rgb(0 0 0 / 50%);
    color: #333;
  }

  .header-left {
    background: url(~/assets/images/header-left.png) no-repeat;
    background-position: left;
    background-size: cover;
    width: 200px;
  }

  .header-right {
    width: 200px;
    display: flex;
    line-height: 54px;
  }

  .header-tabs {
    display: inline-block;

    .header-tabs-item {
      @include common-transition();
      height: 54px;
      line-height: 54px;
      width: 88px;
      display: inline-block;
      position: relative;
      text-align: center;
      font-size: 16px;
      cursor: pointer;
      text-shadow: rgba(0, 0, 0, 0.5) 0 0 2px;

      &:hover {
        &::after {
          width: 100%;
        }
      }

      &::after {
        @include bottom-line();
      }
    }
  }
}

.index-gallery {
  width: calc(100% + 40px);
  height: 100vh;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-attachment: fixed;
  margin: -20px;
  margin-bottom: 0;
  position: relative;

  &::before {
    background-image: url(~/assets/images/gallery/grid.png);
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-attachment: fixed;
  }

  .center-con {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: #fff;
    font-weight: bold;

    .title-big {
      font-size: 80px;
      font-family: Ubuntu, sans-serif;
      font-style: italic;

      &:hover {
      }
    }
  }
}

.sub-gallery {
  .sub-img {
    width: 100%;
  }

  .center-con {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    color: #fff;
    font-weight: bold;
  }

  .banner-title {
    font-size: 54px;
    color: #ddc4ff;
    font-weight: normal;
    font-family: Microsoft JhengHei;
  }
}

.header-switch {
  @include iconInBar();
}

.art-cat-item {
  @include common-transition();
  height: 54px;
  line-height: 54px;
  width: 88px;
  position: relative;
  text-align: center;
  font-size: 16px;
  cursor: pointer;

  &:hover {
    &::after {
      width: 100%;
    }
  }

  &::after {
    @include bottom-line();
  }
}

.linearInOut-enter-from,
.linearInOut-leave-to {
  max-height: 0;
}
.linearInOut-enter-to,
.linearInOut-leave-from {
  max-height: 100vh;
}
.linearInOut-enter-active,
.linearInOut-leave-active {
  transition: max-height 0.5s ease-in-out;
}

.stacked-right {
  position: relative;
  transition: transform 0.3s ease-in-out;
  will-change: transform;

  &:before,
  &:after {
    transform: scale(0.9);
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    transition: transform 0.3s ease-in-out;
    transform-origin: left center;
    will-change: transform;
  }

  &:before {
    z-index: -1;
  }

  &:after {
    z-index: -2;
  }

  &:hover {
    transform: translate(5px, 0);

    &:before {
      transform: translate(-5px, 0) scale(0.95);
    }
    &:after {
      transform: translate(-10px, 0) scale(0.9);
    }
  }
}

.after-opacity-1 {
  &::after {
    opacity: 1;
  }
}
.before-opacity-1 {
  &::before {
    opacity: 1;
  }
}

html {
  /*隐藏滚动条，当IE下溢出，仍然可以滚动*/
  -ms-overflow-style: none;
  /*火狐下隐藏滚动条*/
  overflow: -moz-scrollbars-none;
}
/*Chrome下隐藏滚动条，溢出可以透明滚动*/
html::-webkit-scrollbar {
  // width: 0px;

  *::-webkit-scrollbar {
    // width: 0;
  }
}
::-webkit-scrollbar {
  width: 5px;
  background-color: transparent;
}
::-webkit-scrollbar-thumb {
  background-color: #ffa619;
  height: 100px;
}

//隐藏横向滚动
body {
  overflow-x: hidden;
}

.art-content {
  .v-md-editor-preview {
    .github-markdown-body {
      padding: 0;
    }
  }
}

.comments-area {
  margin-top: 16px;
  border-width: 4px;
  width: 100%;
  height: 10rem;
  border-radius: 4px;
  outline-color: transparent;
  transition-property: border-color, border-width, box-shadow;
  transition-duration: 0.3s;
  transition-timing-function: ease-in-out;
  padding: 6px;

  &:focus {
    // border-top-color: #ffa619;
    // border-bottom-color: #ffa619;
    border-color: #ffa619;
    border-width: 8px;
  }
}

.comments-input {
  height: 40px;
  resize: none;
  font-size: 16px;
  line-height: 40px;
  color: #333;
  border-bottom: 2px solid #ddd;
}

.comments-commit {
}

.avatar-shadow {
  box-shadow: 0 1px 10px -6px rgba(0, 0, 0, 0.5);
}

@mixin btn-border-drawing(
  $color: #ccc,
  $hover: black,
  $width: 2px,
  $vertical: top,
  $horizontal: left,
  $duration: 0.25s
) {
  background: none;
  border: none;
  cursor: pointer;
  line-height: 1.5;
  font: 700 1.2rem "Roboto Slab", sans-serif;
  padding: 1em 2em;
  letter-spacing: 0.05rem;
  box-shadow: inset 0 0 0 $width $color;
  color: $color;
  transition: color $duration calc($duration / 3);
  position: relative;

  &::before,
  &::after {
    border: 0 solid transparent;
    box-sizing: border-box;
    content: "";
    pointer-events: none;
    position: absolute;
    width: 0;
    height: 0;

    #{$vertical}: 0;
    #{$horizontal}: 0;
  }

  &::before {
    $h-side: if($horizontal == "left", "right", "left");

    border-#{$vertical}-width: $width;
    border-#{$h-side}-width: $width;
  }

  &::after {
    $v-side: if($vertical == "top", "bottom", "top");

    border-#{$v-side}-width: $width;
    border-#{$horizontal}-width: $width;
  }

  &:hover {
    color: $hover;

    &::before,
    &::after {
      border-color: $hover;
      transition: border-color 0s, width $duration, height $duration;
      width: 100%;
      height: 100%;
    }

    &::before {
      transition-delay: 0s, 0s, $duration;
    }

    &::after {
      transition-delay: 0s, $duration, 0s;
    }
  }
}

.draw-border {
  @include btn-border-drawing(#58afd1, #ffe593, 4px, bottom, right);
}

//背景效果
#doodle {
  position: fixed;
  width: 100vw;
  height: 100vh;
  top: 0;
  z-index: -1;

  &::after {
    content: "";
    position: absolute;
    top: -100%;
    left: -100%;
    right: -100%;
    bottom: -100%;
    backdrop-filter: blur(100px);
    z-index: 0;
  }
}
